// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: ContainersLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockContainersLister is a mock of ContainersLister interface
type MockContainersLister struct {
	ctrl     *gomock.Controller
	recorder *MockContainersListerMockRecorder
}

// MockContainersListerMockRecorder is the mock recorder for MockContainersLister
type MockContainersListerMockRecorder struct {
	mock *MockContainersLister
}

// NewMockContainersLister creates a new mock instance
func NewMockContainersLister(ctrl *gomock.Controller) *MockContainersLister {
	mock := &MockContainersLister{ctrl: ctrl}
	mock.recorder = &MockContainersListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockContainersLister) EXPECT() *MockContainersListerMockRecorder {
	return m.recorder
}

// Containers mocks base method
func (m *MockContainersLister) Containers(arg0 string, arg1 *mongodbatlas.ContainersListOptions) ([]mongodbatlas.Container, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Containers", arg0, arg1)
	ret0, _ := ret[0].([]mongodbatlas.Container)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Containers indicates an expected call of Containers
func (mr *MockContainersListerMockRecorder) Containers(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Containers", reflect.TypeOf((*MockContainersLister)(nil).Containers), arg0, arg1)
}
